apply plugin: 'com.android.library'
apply plugin: 'jacoco'

version = "0.0.1"

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 22
        versionCode updateVersionCode(module.name)
        versionName version
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEV"
            debuggable true
            testCoverageEnabled = true
        }

        release {
            debuggable false
            testCoverageEnabled = false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled false
        }
    }
}

android.sourceSets.test.java.srcDirs += "build/generated/source/r/debug"

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:22.0.0'
    compile 'com.android.support:recyclerview-v7:22.0.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.robolectric:robolectric:2.4'
}

task generateJacocoTestReports(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco Robolectric unit test coverage reports"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    classDirectories = fileTree(
            dir: '../commons/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    sourceDirectories = files('../commons/src/main/java')
    additionalSourceDirs = files('../commons/src/main/java')
    executionData = files('../commons/build/jacoco/testDebug.exec')
}