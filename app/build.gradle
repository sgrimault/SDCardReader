apply plugin: 'com.android.application'
// apply plugin: 'jacoco'

version = "0.0.6"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    signingConfigs {
        release {
            storeFile file("../" + STORE_FILE)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    defaultConfig {
        applicationId "sc.sn.sdcardreader"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode updateVersionCode(module.name)
        versionName version
        buildConfigField "String", "BUILD_DATE", "\"" + new Date().getTime() + "\""
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEV"
            debuggable true
            // testCoverageEnabled = true
        }

        release {
            signingConfig signingConfigs.release
            debuggable false
            testCoverageEnabled = false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(
                            output.outputFile.parent,
                            output.outputFile.name.replace(".apk", "-" + defaultConfig.versionName + ".apk")
                    )
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    debugCompile project(path: ':commons', configuration: 'debug')
    releaseCompile project(path: ':commons', configuration: 'release')

    compile "com.android.support:cardview-v7:${rootProject.ext.androidSupportVersion}"
    compile "com.android.support:preference-v7:${rootProject.ext.androidSupportVersion}"

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.1.2'
    testCompile 'org.mockito:mockito-core:2.2.7'
}

task generateJacocoTestReports(type: JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"
    description = "Generate Jacoco Robolectric unit test coverage reports"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    sourceDirectories = files('../app/src/main/java')
    additionalSourceDirs = files('../app/src/main/java')
    executionData = files('../app/build/jacoco/testDebug.exec')
}
